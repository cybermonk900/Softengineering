#Ex 4.3.1.6
#function to check leap year
def is_year_leap(year): 
    #conditional statements
    if year <1584:

        print("Not within a Gregorian calender period")
return None
    elif year % 4 != 0: 
        print("Its a common year")
        return False
    elif year %100 !=0:
        print("its a leap year")
        return True
    elif year % 400 != 0:
        print("Its a common year")
        return False
    else:
        print("its a leap year")
        return True
test_data = [1900, 2000, 2016, 1987]
test_results = [False, True, True, False]
for i in range(len(test_data)):
	yr = test_data[i]
	print(yr,"->",end="")
	result = is_year_leap(yr)
	if result == test_results[i]:
		print("OK")
	else:
		print("Failed")
######4.3.1.7########################

def is_year_leap(year):
#
# Your code from LAB 4.3.1.6.
#conditional statements
    if year <1584:
        print("Not within a Gregorian calender period")
    elif year % 4 != 0: 
        print("Its a common year")
        return False
    elif year %100 !=0:
        print("its a leap year")
        return True
    elif year % 400 != 0:
        print("Its a common year")
        return False
    else:
        print("its a leap year")
        return True
#

def days_in_month(year, month):
#
#List that corresponds to number of days
    month_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
    if is_year_leap(year):
        month_days[1] = 29  # 29 days for February on a leap year.
    print(month_days[month - 1])
    return month_days[month - 1]
    
days_in_month(2000,2)

test_years = [1900, 2000, 2016, 1987]
test_months = [2, 2, 1, 11]
test_results = [28, 29, 31, 30]
for i in range(len(test_years)):
	yr = test_years[i]
	mo = test_months[i]
	print(yr, mo, "->", end="")

	result = days_in_month(yr, mo)
	if result == test_results[i]:
		print("OK")
	else:
		print("Failed")


####Ex 4.1.3.8

def is_year_leap(year):
#
# Your code from LAB 4.3.1.6.
    if year <1582:
        print("Not within a Gregorian calender period")
    elif year % 4 != 0: 
        print("Its a common year")
        return False
    elif year %100 !=0:
        print("its a leap year")
        return True
    elif year % 400 != 0:
        print("Its a common year")
        return False
    else:
        print("its a leap year")
        return True
#

def days_in_month(year, month):
#
# Your code from LAB 4.3.1.7.
    month_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
    if year < 1582 or month < 1 or month >12:
        return None
    elif is_year_leap(year):
        month_days[1] = 29  # 29 days for February on a leap year.
    print(month_days[month - 1])
    return month_days[month - 1]

def day_of_year(year, month, day):
    if year < 1582 or month < 1 or month > 12 or day < 0 or day > 31:
        return None
    # Calculate days 
    total_days = day
    month = month -1
    while month > 0:
        total_days = total_days + days_in_month(year, month)
        month = month - 1
    return total_days
#
# Write your new code here.
#

print(day_of_year(2000, 12, 31))
		
